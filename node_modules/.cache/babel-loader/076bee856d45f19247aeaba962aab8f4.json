{"ast":null,"code":"var _jsxFileName = \"/home/oliver/Documents/Oli/Truextend/course-description-interface-react/src/views/layout/index.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport clsx from 'clsx';\nimport { useTheme } from '@material-ui/core/styles';\nimport { Drawer, CssBaseline, AppBar, Toolbar, List, Typography, Divider, IconButton, ListItem, ListItemIcon, ListItemText } from '@material-ui/core';\nimport { Menu, CollectionsBookmark, ChevronLeft, ChevronRight, AddCircle } from '@material-ui/icons';\nimport { addCourse } from '../../actions';\nimport useStyles from '../../theme/styles';\nimport Form from '../courses/form';\n\nconst Layout = ({\n  children,\n  courses,\n  addCourseAction\n}) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(true);\n  const [addOpen, setAddOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(Form, {\n    open: addOpen,\n    close: () => setAddOpen(false),\n    success: addCourseAction,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(CssBaseline, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(AppBar, {\n    position: \"fixed\",\n    className: clsx(classes.appBar, {\n      [classes.appBarShift]: open\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    color: \"inherit\",\n    \"aria-label\": \"open drawer\",\n    onClick: handleDrawerOpen,\n    edge: \"start\",\n    className: clsx(classes.menuButton, open && classes.hide),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Menu, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  })), React.createElement(Typography, {\n    variant: \"h6\",\n    noWrap: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Course description interface\"))), React.createElement(Drawer, {\n    className: classes.drawer,\n    variant: \"persistent\",\n    anchor: \"left\",\n    open: open,\n    classes: {\n      paper: classes.drawerPaper\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.drawerHeader,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    onClick: handleDrawerClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, theme.direction === 'ltr' ? React.createElement(ChevronLeft, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }) : React.createElement(ChevronRight, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }))), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, courses.items.map(course => React.createElement(Link, {\n    to: `/courses/${course.id}`,\n    style: {\n      textDecoration: 'none'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(ListItem, {\n    button: true,\n    key: course.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(ListItemIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(CollectionsBookmark, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  })), React.createElement(ListItemText, {\n    primary: course.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }))))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    onClick: () => setAddOpen(true),\n    className: classes.addButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(AddCircle, {\n    color: \"primary\",\n    className: classes.addButtonSize,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  })))), React.createElement(\"main\", {\n    className: clsx(classes.content, {\n      [classes.contentShift]: open\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.drawerHeader,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }), children)));\n};\n\nconst mapDispatchToProps = {\n  addCourseAction: addCourse\n};\n\nconst mapStateToProps = state => ({\n  courses: state.courses\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Layout);","map":{"version":3,"sources":["/home/oliver/Documents/Oli/Truextend/course-description-interface-react/src/views/layout/index.js"],"names":["React","connect","Link","clsx","useTheme","Drawer","CssBaseline","AppBar","Toolbar","List","Typography","Divider","IconButton","ListItem","ListItemIcon","ListItemText","Menu","CollectionsBookmark","ChevronLeft","ChevronRight","AddCircle","addCourse","useStyles","Form","Layout","children","courses","addCourseAction","classes","theme","open","setOpen","useState","addOpen","setAddOpen","handleDrawerOpen","handleDrawerClose","root","appBar","appBarShift","menuButton","hide","drawer","paper","drawerPaper","drawerHeader","direction","items","map","course","id","textDecoration","name","addButton","addButtonSize","content","contentShift","mapDispatchToProps","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,QAAT,QAAyB,0BAAzB;AACA,SAASC,MAAT,EAAiBC,WAAjB,EAA8BC,MAA9B,EAAsCC,OAAtC,EAA+CC,IAA/C,EAAqDC,UAArD,EAAiEC,OAAjE,EAA0EC,UAA1E,EACEC,QADF,EACYC,YADZ,EAC0BC,YAD1B,QAC8C,mBAD9C;AAEA,SAASC,IAAT,EAAeC,mBAAf,EAAoCC,WAApC,EAAiDC,YAAjD,EAA+DC,SAA/D,QAAgF,oBAAhF;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,IAAP,MAAiB,iBAAjB;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,OAAZ;AAAqBC,EAAAA;AAArB,CAAD,KAA4C;AACzD,QAAMC,OAAO,GAAGN,SAAS,EAAzB;AACA,QAAMO,KAAK,GAAGzB,QAAQ,EAAtB;AACA,QAAM,CAAC0B,IAAD,EAAOC,OAAP,IAAkB/B,KAAK,CAACgC,QAAN,CAAe,IAAf,CAAxB;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBlC,KAAK,CAACgC,QAAN,CAAe,KAAf,CAA9B;;AAEA,QAAMG,gBAAgB,GAAG,MAAM;AAC7BJ,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAFD;;AAIA,QAAMK,iBAAiB,GAAG,MAAM;AAC9BL,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAFD;;AAIA,SACE,0CACE,oBAAC,IAAD;AACE,IAAA,IAAI,EAAEE,OADR;AAEE,IAAA,KAAK,EAAE,MAAMC,UAAU,CAAC,KAAD,CAFzB;AAGE,IAAA,OAAO,EAAEP,eAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME;AAAK,IAAA,SAAS,EAAEC,OAAO,CAACS,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,MAAD;AACE,IAAA,QAAQ,EAAC,OADX;AAEE,IAAA,SAAS,EAAElC,IAAI,CAACyB,OAAO,CAACU,MAAT,EAAiB;AAC9B,OAACV,OAAO,CAACW,WAAT,GAAuBT;AADO,KAAjB,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AACE,IAAA,KAAK,EAAC,SADR;AAEE,kBAAW,aAFb;AAGE,IAAA,OAAO,EAAEK,gBAHX;AAIE,IAAA,IAAI,EAAC,OAJP;AAKE,IAAA,SAAS,EAAEhC,IAAI,CAACyB,OAAO,CAACY,UAAT,EAAqBV,IAAI,IAAIF,OAAO,CAACa,IAArC,CALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF,EAUE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,MAAM,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAVF,CANF,CAFF,EAwBE,oBAAC,MAAD;AACE,IAAA,SAAS,EAAEb,OAAO,CAACc,MADrB;AAEE,IAAA,OAAO,EAAC,YAFV;AAGE,IAAA,MAAM,EAAC,MAHT;AAIE,IAAA,IAAI,EAAEZ,IAJR;AAKE,IAAA,OAAO,EAAE;AACPa,MAAAA,KAAK,EAAEf,OAAO,CAACgB;AADR,KALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASE;AAAK,IAAA,SAAS,EAAEhB,OAAO,CAACiB,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAET,iBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,KAAK,CAACiB,SAAN,KAAoB,KAApB,GAA4B,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA5B,GAA8C,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADjD,CADF,CATF,EAcE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF,EAeE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGpB,OAAO,CAACqB,KAAR,CAAcC,GAAd,CAAmBC,MAAD,IACjB,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAG,YAAWA,MAAM,CAACC,EAAG,EAAhC;AAAmC,IAAA,KAAK,EAAE;AAAEC,MAAAA,cAAc,EAAE;AAAlB,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAU,IAAA,MAAM,MAAhB;AAAiB,IAAA,GAAG,EAAEF,MAAM,CAACG,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAc,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAd,CADF,EAEE,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAEH,MAAM,CAACG,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CADD,CADH,CAfF,EAyBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAE,MAAMlB,UAAU,CAAC,IAAD,CAArC;AAA6C,IAAA,SAAS,EAAEN,OAAO,CAACyB,SAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,SAAjB;AAA2B,IAAA,SAAS,EAAEzB,OAAO,CAAC0B,aAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAzBF,CAxBF,EAuDE;AACE,IAAA,SAAS,EAAEnD,IAAI,CAACyB,OAAO,CAAC2B,OAAT,EAAkB;AAC/B,OAAC3B,OAAO,CAAC4B,YAAT,GAAwB1B;AADO,KAAlB,CADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE;AAAK,IAAA,SAAS,EAAEF,OAAO,CAACiB,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAMIpB,QANJ,CAvDF,CANF,CADF;AAyED,CAvFD;;AAyFA,MAAMgC,kBAAkB,GAAG;AACzB9B,EAAAA,eAAe,EAAEN;AADQ,CAA3B;;AAIA,MAAMqC,eAAe,GAAIC,KAAD,KAAY;AAClCjC,EAAAA,OAAO,EAAEiC,KAAK,CAACjC;AADmB,CAAZ,CAAxB;;AAIA,eAAezB,OAAO,CAACyD,eAAD,EAAkBD,kBAAlB,CAAP,CAA6CjC,MAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport clsx from 'clsx';\nimport { useTheme } from '@material-ui/core/styles';\nimport { Drawer, CssBaseline, AppBar, Toolbar, List, Typography, Divider, IconButton,\n  ListItem, ListItemIcon, ListItemText } from '@material-ui/core';\nimport { Menu, CollectionsBookmark, ChevronLeft, ChevronRight, AddCircle } from '@material-ui/icons';\nimport { addCourse } from '../../actions';\nimport useStyles from '../../theme/styles';\nimport Form from '../courses/form';\n\nconst Layout = ({ children, courses, addCourseAction }) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(true);\n  const [addOpen, setAddOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <>\n      <Form\n        open={addOpen}\n        close={() => setAddOpen(false)}\n        success={addCourseAction}\n      />\n      <div className={classes.root}>\n        <CssBaseline />\n        <AppBar\n          position=\"fixed\"\n          className={clsx(classes.appBar, {\n            [classes.appBarShift]: open,\n          })}\n        >\n          <Toolbar>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              onClick={handleDrawerOpen}\n              edge=\"start\"\n              className={clsx(classes.menuButton, open && classes.hide)}\n            >\n              <Menu />\n            </IconButton>\n            <Typography variant=\"h6\" noWrap>\n              Course description interface\n            </Typography>\n          </Toolbar>\n        </AppBar>\n\n        <Drawer\n          className={classes.drawer}\n          variant=\"persistent\"\n          anchor=\"left\"\n          open={open}\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n        >\n          <div className={classes.drawerHeader}>\n            <IconButton onClick={handleDrawerClose}>\n              {theme.direction === 'ltr' ? <ChevronLeft /> : <ChevronRight />}\n            </IconButton>\n          </div>\n          <Divider />\n          <List>\n            {courses.items.map((course) => (\n              <Link to={`/courses/${course.id}`} style={{ textDecoration: 'none' }}>\n                <ListItem button key={course.name}>\n                  <ListItemIcon><CollectionsBookmark /></ListItemIcon>\n                  <ListItemText primary={course.name} />\n                </ListItem>\n              </Link>\n            ))}\n          </List>\n          <div>\n            <IconButton onClick={() => setAddOpen(true)} className={classes.addButton}>\n              <AddCircle color=\"primary\" className={classes.addButtonSize} />\n            </IconButton>\n          </div>\n        </Drawer>\n        <main\n          className={clsx(classes.content, {\n            [classes.contentShift]: open,\n          })}\n        >\n          <div className={classes.drawerHeader} />\n          { children }\n        </main>\n      </div>\n    </>\n  );\n};\n\nconst mapDispatchToProps = {\n  addCourseAction: addCourse,\n};\n\nconst mapStateToProps = (state) => ({\n  courses: state.courses,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Layout);\n"]},"metadata":{},"sourceType":"module"}
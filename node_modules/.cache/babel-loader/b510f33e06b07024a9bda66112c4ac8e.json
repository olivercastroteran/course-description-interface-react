{"ast":null,"code":"import { ADD_COURSE, UPDATE_COURSE, DELETE_COURSE, ADD_BOOK, DELETE_BOOK, UPDATE_BOOK } from '../actions/types';\nconst INITIAL_STATE = {\n  items: [{\n    id: '123',\n    name: 'Introduction to Advertising',\n    description: 'Learn about advertising',\n    textbooks: [{\n      author: 'Joe Smith',\n      title: 'Mobile Advertising Fundamentals'\n    }, {\n      author: 'Eli Hinnegan',\n      title: 'Introduction to Location-Based Advertising'\n    }, {\n      author: 'Edward Bernays',\n      title: 'Public Relations'\n    }]\n  }],\n  lastId: 1\n};\nexport default ((state = INITIAL_STATE, action) => {\n  const {\n    payload\n  } = action;\n\n  switch (action.type) {\n    case ADD_COURSE:\n      return { ...state,\n        items: state.items.concat({ ...payload.course,\n          id: state.lastId + 1,\n          textbooks: []\n        }),\n        lastId: state.lastId + 1\n      };\n\n    case UPDATE_COURSE:\n      return { ...state,\n        items: state.items.map(item => item.id === payload.course.id ? payload.course : item)\n      };\n\n    case DELETE_COURSE:\n      return { ...state,\n        items: state.items.filter(item => item.id !== payload.course.id)\n      };\n\n    case ADD_BOOK:\n      return { ...state,\n        items: state.items.map(item => {\n          if (item.id === payload.course.id) {\n            return { ...item,\n              textbooks: item.textbooks.concat(payload.book)\n            };\n          }\n\n          return item;\n        })\n      };\n    // WORKING WITH NAME AND AUTHOR AS KEY AS THERE IS NO ID IN THE BACK END\n\n    case DELETE_BOOK:\n      return { ...state,\n        items: state.items.map(item => {\n          if (item.id === payload.course.id) {\n            return { ...item,\n              textbooks: item.textbooks.filter(b => b.name + b.author !== payload.book.name + payload.book.author)\n            };\n          }\n\n          return item;\n        })\n      };\n\n    case UPDATE_BOOK:\n      return { ...state,\n        items: state.items.map(item => {\n          if (item.id === payload.course.id) {\n            return { ...item,\n              textbooks: item.textbooks.map(b => b.name + b.author === payload.prevBook.name + payload.prevBook.author ? payload.book : b)\n            };\n          }\n\n          return item;\n        })\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/home/oliver/Documents/Oli/Truextend/course-description-interface-react/src/reducers/courses.js"],"names":["ADD_COURSE","UPDATE_COURSE","DELETE_COURSE","ADD_BOOK","DELETE_BOOK","UPDATE_BOOK","INITIAL_STATE","items","id","name","description","textbooks","author","title","lastId","state","action","payload","type","concat","course","map","item","filter","book","b","prevBook"],"mappings":"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","sourcesContent":["import {\n  ADD_COURSE,\n  UPDATE_COURSE,\n  DELETE_COURSE,\n  ADD_BOOK,\n  DELETE_BOOK,\n  UPDATE_BOOK,\n} from '../actions/types';\n\nconst INITIAL_STATE = {\n  items: [{\n    id: '123',\n    name: 'Introduction to Advertising',\n    description: 'Learn about advertising',\n    textbooks: [\n      {\n        author: 'Joe Smith',\n        title: 'Mobile Advertising Fundamentals',\n      },\n      {\n        author: 'Eli Hinnegan',\n        title: 'Introduction to Location-Based Advertising',\n      },\n      {\n        author: 'Edward Bernays',\n        title: 'Public Relations',\n      },\n    ],\n  }],\n  lastId: 1,\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  const { payload } = action;\n  switch (action.type) {\n    case ADD_COURSE:\n      return { ...state,\n        items: state.items.concat({ ...payload.course, id: state.lastId + 1, textbooks: [] }),\n        lastId: state.lastId + 1 };\n    case UPDATE_COURSE:\n      return { ...state,\n        items: state.items.map(\n          (item) => (item.id === payload.course.id ? payload.course : item),\n        ) };\n    case DELETE_COURSE:\n      return { ...state, items: state.items.filter((item) => item.id !== payload.course.id) };\n    case ADD_BOOK:\n      return { ...state,\n        items: state.items.map((item) => {\n          if (item.id === payload.course.id) {\n            return {\n              ...item,\n              textbooks: item.textbooks.concat(payload.book),\n            };\n          }\n          return item;\n        }) };\n\n      // WORKING WITH NAME AND AUTHOR AS KEY AS THERE IS NO ID IN THE BACK END\n\n    case DELETE_BOOK:\n      return { ...state,\n        items: state.items.map((item) => {\n          if (item.id === payload.course.id) {\n            return {\n              ...item,\n              textbooks: item.textbooks.filter(\n                (b) => (b.name + b.author) !== (payload.book.name + payload.book.author),\n              ),\n            };\n          }\n          return item;\n        }) };\n    case UPDATE_BOOK:\n      return { ...state,\n        items: state.items.map((item) => {\n          if (item.id === payload.course.id) {\n            return {\n              ...item,\n              textbooks: item.textbooks.map(\n                (b) => ((b.name + b.author) === (payload.prevBook.name + payload.prevBook.author) ? payload.book : b),\n              ),\n            };\n          }\n          return item;\n        }) };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/sergiokoller/Programming/Personal/react-course-description-interface/src/views/layout/index.js\";\nimport React from 'react';\nimport clsx from 'clsx';\nimport { useTheme } from '@material-ui/core/styles';\nimport { Drawer, CssBaseline, AppBar, Icon, Toolbar, List, Typography, Divider, IconButton, ListItem, ListItemIcon, ListItemText } from '@material-ui/core/Drawer';\nimport { Menu, CollectionsBookmark, ChevronLeft, ChevronRight, AddCircle } from '@material-ui/icons/Menu';\nimport useStyles from '../../theme/styles';\n\nconst Layout = ({\n  children\n}) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(true);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(CssBaseline, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), React.createElement(AppBar, {\n    position: \"fixed\",\n    className: clsx(classes.appBar, {\n      [classes.appBarShift]: open\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    color: \"inherit\",\n    \"aria-label\": \"open drawer\",\n    onClick: handleDrawerOpen,\n    edge: \"start\",\n    className: clsx(classes.menuButton, open && classes.hide),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(Menu, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  })), React.createElement(Typography, {\n    variant: \"h6\",\n    noWrap: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Course description interface\"))), React.createElement(Drawer, {\n    className: classes.drawer,\n    variant: \"persistent\",\n    anchor: \"left\",\n    open: open,\n    classes: {\n      paper: classes.drawerPaper\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.drawerHeader,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    onClick: handleDrawerClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, theme.direction === 'ltr' ? React.createElement(ChevronLeft, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }) : React.createElement(ChevronRight, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }))), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, ['course #1', 'course #2', 'course #3'].map((text, index) => React.createElement(ListItem, {\n    button: true,\n    key: text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(ListItemIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(CollectionsBookmark, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  })), React.createElement(ListItemText, {\n    primary: text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  })))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(AddCircle, {\n    color: \"primary\",\n    className: classes.addButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  })))), React.createElement(\"main\", {\n    className: clsx(classes.content, {\n      [classes.contentShift]: open\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, children));\n};\n\nexport default Layout;","map":{"version":3,"sources":["/Users/sergiokoller/Programming/Personal/react-course-description-interface/src/views/layout/index.js"],"names":["React","clsx","useTheme","Drawer","CssBaseline","AppBar","Icon","Toolbar","List","Typography","Divider","IconButton","ListItem","ListItemIcon","ListItemText","Menu","CollectionsBookmark","ChevronLeft","ChevronRight","AddCircle","useStyles","Layout","children","classes","theme","open","setOpen","useState","handleDrawerOpen","handleDrawerClose","root","appBar","appBarShift","menuButton","hide","drawer","paper","drawerPaper","drawerHeader","direction","map","text","index","addButton","content","contentShift"],"mappings":"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","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport { useTheme } from '@material-ui/core/styles';\nimport { Drawer, CssBaseline, AppBar, Icon, Toolbar, List, Typography, Divider, IconButton,\n  ListItem, ListItemIcon, ListItemText } from '@material-ui/core/Drawer';\nimport { Menu, CollectionsBookmark, ChevronLeft, ChevronRight, AddCircle } from '@material-ui/icons/Menu';\nimport useStyles from '../../theme/styles';\n\nconst Layout = ({ children }) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(true);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, open && classes.hide)}\n          >\n            <Menu />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            Course description interface\n          </Typography>\n        </Toolbar>\n      </AppBar>\n\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'ltr' ? <ChevronLeft /> : <ChevronRight />}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          {['course #1', 'course #2', 'course #3'].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemIcon><CollectionsBookmark /></ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n        <div>\n          <Icon><AddCircle color=\"primary\" className={classes.addButton} /></Icon>\n        </div>\n      </Drawer>\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: open,\n        })}\n      >\n        { children }\n      </main>\n    </div>\n  );\n};\n\nexport default Layout;\n"]},"metadata":{},"sourceType":"module"}